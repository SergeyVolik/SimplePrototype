//-----------------------------------------------------------------------
// This file is AUTO-GENERATED.
// Changes for this script by hand might be lost when auto-generation is run.
// (Generated date:30.12.2021 15:29:54)
 //-----------------------------------------------------------------------

#pragma kernel CSMain
#define NB_THREADS_PER_GROUP 64
#include "Packages/com.unity.render-pipelines.core/ShaderLibrary/Common.hlsl"
static const float customCurveArray0[101] = {
	0.00f,
	0.03f,
	0.05f,
	0.08f,
	0.11f,
	0.14f,
	0.17f,
	0.20f,
	0.22f,
	0.25f,
	0.28f,
	0.31f,
	0.34f,
	0.37f,
	0.40f,
	0.43f,
	0.45f,
	0.48f,
	0.51f,
	0.54f,
	0.56f,
	0.59f,
	0.61f,
	0.64f,
	0.66f,
	0.69f,
	0.71f,
	0.73f,
	0.75f,
	0.77f,
	0.79f,
	0.81f,
	0.83f,
	0.85f,
	0.86f,
	0.88f,
	0.90f,
	0.92f,
	0.93f,
	0.95f,
	0.96f,
	0.97f,
	0.98f,
	0.99f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	1.00f,
	0.99f,
	0.98f,
	0.97f,
	0.96f,
	0.95f,
	0.94f,
	0.93f,
	0.91f,
	0.90f,
	0.88f,
	0.87f,
	0.85f,
	0.83f,
	0.81f,
	0.79f,
	0.77f,
	0.75f,
	0.73f,
	0.71f,
	0.69f,
	0.67f,
	0.64f,
	0.62f,
	0.60f,
	0.57f,
	0.55f,
	0.52f,
	0.50f,
	0.48f,
	0.45f,
	0.43f,
	0.40f,
	0.38f,
	0.35f,
	0.33f,
	0.30f,
	0.28f,
	0.25f,
	0.23f,
	0.20f,
	0.18f,
	0.16f,
	0.13f,
	0.11f,
	0.09f,
	0.07f,
	0.04f,
	0.02f,
};
const float minus_infinity = -3.402823466e+38;

float Normalize(float value, float min, float max)
{
   return clamp((value - min) / (max - min), 0, 1);
}

int SelectMaxValueIndex3(float values[3])
{
    float max = minus_infinity;
    int result = 0;
   for (int i = 0; i < 3; i++)
    {
       if (max < values[i])
        {
           max = values[i];
           result = i;
        }
    }
    return result;
}


struct InAgentData {
   float DistanceToEnemy;
   float GunIsLoaded;
   float IsInCover;
};
struct OutAgentData {
   int State;
   float Age;
};
CBUFFER_START(Always)
    float SimulationTime;
    float DeltaTime;
CBUFFER_END
StructuredBuffer<InAgentData> InAgentBuffer;
RWStructuredBuffer<OutAgentData> OutAgentBuffer;

[numthreads(NB_THREADS_PER_GROUP,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int index = id.x;

    float nomalizedDistanceToEnemy = Normalize(InAgentBuffer[index].DistanceToEnemy, 0, 100);
    float nomalizedGunIsLoaded = Normalize(InAgentBuffer[index].GunIsLoaded, 0, 1);
    float nomalizedIsInCover = Normalize(InAgentBuffer[index].IsInCover, 0, 1);
    float floatArray0[3] = {
        customCurveArray0[(int)(nomalizedDistanceToEnemy*100)],
        nomalizedGunIsLoaded,
        nomalizedIsInCover,
    };
	int selectIndex0 = SelectMaxValueIndex3(floatArray0);
   OutAgentData output; 
   output.State = selectIndex0; 
   output.Age = OutAgentBuffer[index].Age + DeltaTime; 
   OutAgentBuffer[index] = output;
}
