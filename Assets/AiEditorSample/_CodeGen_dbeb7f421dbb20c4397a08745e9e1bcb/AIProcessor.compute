//-----------------------------------------------------------------------
// This file is AUTO-GENERATED.
// Changes for this script by hand might be lost when auto-generation is run.
// (Generated date:19.12.2021 9:12:48)
 //-----------------------------------------------------------------------

#pragma kernel CSMain
const float minus_infinity = -(1. / 0.);

float Normalize(float value, float min, float max)
{
    return clamp((value - min) / (max - min), 0, 1);
}
float OneMinus(float value)
{
    return 1 - value;
}
int SelectMaxValueIndex2(float values[2])
{
    float max = minus_infinity;
    int result = 0;
   for (int i = 0; i < 2; i++)
    {
       if (max < values[i])
        {
           max = values[i];
           result = i;
        }
    }
    return result;
}


RWStructuredBuffer<float> Energy;

RWStructuredBuffer<int> Result;
[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    int index = id.x;
    float entry0 = Normalize(Energy[index], 0, 100);
    float entry1 = OneMinus(Normalize(Energy[index], 0, 100));
    float values[2] = {
        entry0,
        entry1,
    };
    Result[index] = SelectMaxValueIndex2(values);
}

